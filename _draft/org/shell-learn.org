#+LATEX_CLASS: article
#+LATEX_CLASS_OPTIONS:
#+LATEX_HEADER:
#+LATEX_HEADER_EXTRA:
#+DESCRIPTION:
#+KEYWORDS:
#+SUBTITLE:
#+OPTIONS: ^:{} _:{}
#+DATE: \today
#+TITLE: shell 脚本学习笔记
#+AUTHOR: Geekchic


** Shell 的特殊变量

#+CAPTIONS: 特殊变量列表
#+ATTR_LATEX: :align |c|c| :environment longtable
|------+------------------------------|
| 变量 | 含义                         |
|------+------------------------------|
| $0   | 当前脚本的文件名             |
|------+------------------------------|
| $n   | 传递给脚本或函数的参数       |
|      | n是一个数字，表示第几个      |
|      | 参数，例如$1,$2              |
|------+------------------------------|
| $#   | 传递给脚本或函数的个数       |
|------+------------------------------|
| $*   | 传递给脚本或函数的所有参数   |
|------+------------------------------|
| $@   | 传递给脚本或函数的所有参数， |
|      | 被双引号（""） 包含时，      |
|      | 与$* 稍有不同                |
|------+------------------------------|
| $?   | 上个命令的退出状态           |
|      | 或者函数的返回值             |
|------+------------------------------|
| $$   | 当前shell进程ID              |
|------+------------------------------|

*** $* 和 $@ 的区别

- $* 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号（""）  包含时，\\
  都以"$1","$2"..."$n" 的形式输出所有参数。\\
  但是当他们被双引号（""）包含时，"$*" 会将所有的参数作为一个整体\\
  以"$1 $2 $3 ... $n" 的形式输出所有参数；\\
  "$@" 会将各个参数分开，以 "$1" "$2" ... "$n" 的形式输出所有参数；

- 总结就是，$* 输出的形式会根据是否有（""） 双引号 而改变。
- 而 $@ 不管是否有（""）  双引号都是以参数分开的形式输出。

